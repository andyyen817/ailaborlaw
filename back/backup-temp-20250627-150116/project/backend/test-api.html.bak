<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI勞基法顧問 API 測試頁</title>
    <style>
        body {
            font-family: 'Microsoft JhengHei', Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f7f9fc;
        }
        h1, h2, h3 {
            color: #2c3e50;
        }
        .container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        .card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            flex: 1;
            min-width: 300px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input, textarea, select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }
        button:hover {
            background-color: #2980b9;
        }
        pre {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 4px;
            overflow: auto;
            max-height: 300px;
        }
        .success {
            color: #27ae60;
        }
        .error {
            color: #e74c3c;
        }
        .nav {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        .nav button {
            background-color: #95a5a6;
            flex: 1;
        }
        .nav button.active {
            background-color: #3498db;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body>
    <h1>AI勞基法顧問 API 測試頁</h1>
    <p>此頁面用於測試後端 API 功能，可以幫助前端開發人員了解 API 的使用方式。</p>
    
    <div class="nav">
        <button class="tab-btn active" data-tab="auth">認證 API</button>
        <button class="tab-btn" data-tab="user">用戶資料 API</button>
        <button class="tab-btn" data-tab="admin">管理員 API</button>
        <button class="tab-btn" data-tab="test">權限測試</button>
        <button class="tab-btn" data-tab="debug">調試信息</button>
    </div>

    <div id="auth" class="tab-content active">
        <div class="container">
            <div class="card">
                <h2>用戶註冊</h2>
                <div class="form-group">
                    <label for="register-name">姓名</label>
                    <input type="text" id="register-name" placeholder="請輸入姓名">
                </div>
                <div class="form-group">
                    <label for="register-email">電子郵箱</label>
                    <input type="email" id="register-email" placeholder="請輸入電子郵箱">
                </div>
                <div class="form-group">
                    <label for="register-password">密碼</label>
                    <input type="password" id="register-password" placeholder="請輸入密碼">
                </div>
                <div class="form-group">
                    <label for="register-userType">用戶類型</label>
                    <select id="register-userType">
                        <option value="employee">員工</option>
                        <option value="employer">雇主</option>
                        <option value="hr">人資</option>
                        <option value="admin">管理員</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="register-industry">行業</label>
                    <input type="text" id="register-industry" placeholder="請輸入您的行業">
                </div>
                <div class="form-group">
                    <label for="register-position">職業</label>
                    <input type="text" id="register-position" placeholder="請輸入您的職業">
                </div>
                <div class="form-group">
                    <label for="register-inviteCode">邀請碼</label>
                    <input type="text" id="register-inviteCode" placeholder="請輸入邀請碼(選填)">
                </div>
                <button id="register-btn">註冊</button>
                <div id="register-result" class="result"></div>
            </div>

            <div class="card">
                <h2>用戶登入</h2>
                <div class="form-group">
                    <label for="login-email">電子郵箱</label>
                    <input type="email" id="login-email" placeholder="請輸入電子郵箱">
                </div>
                <div class="form-group">
                    <label for="login-password">密碼</label>
                    <input type="password" id="login-password" placeholder="請輸入密碼">
                </div>
                <button id="login-btn">登入</button>
                <div id="login-result" class="result"></div>
                
                <h3 style="margin-top: 20px;">快速登入選項</h3>
                <div style="display: flex; gap: 10px; margin-top: 10px;">
                    <button id="admin-quick-login" style="flex: 1; background-color: #e74c3c;">超級管理員<br>(superadmin@ailaborlaw.com)</button>
                    <button id="user-quick-login" style="flex: 1; background-color: #27ae60;">普通管理員<br>(newadmin@ailaborlaw.com)</button>
                </div>
                <div id="quick-login-result" class="result"></div>
            </div>
        </div>
    </div>

    <div id="user" class="tab-content">
        <h2>用戶資料 API 測試</h2>
        <p>測試用戶資料和諮詢次數管理相關API</p>
        
        <div class="container">
            <div class="card">
                <h3>用戶資料</h3>
                <button id="get-profile-btn">獲取用戶資料</button>
                <div id="profile-result" class="result"></div>
                
                <div class="form-group">
                    <label for="update-name">名稱</label>
                    <input type="text" id="update-name" placeholder="新的用戶名稱">
                </div>
                <div class="form-group">
                    <label for="update-phone">手機號碼</label>
                    <input type="text" id="update-phone" placeholder="手機號碼">
                </div>
                <div class="form-group">
                    <label for="update-company">公司名稱</label>
                    <input type="text" id="update-company" placeholder="公司名稱">
                </div>
                <div class="form-group">
                    <label for="update-industry">行業</label>
                    <input type="text" id="update-industry" placeholder="行業">
                </div>
                <div class="form-group">
                    <label for="update-position">職業</label>
                    <input type="text" id="update-position" placeholder="職業">
                </div>
                <button id="update-profile-btn">更新資料</button>
                <div id="update-profile-result" class="result"></div>
            </div>
            
            <div class="card">
                <h3>諮詢次數管理</h3>
                <button id="get-queries-btn">獲取剩餘次數</button>
                <div id="queries-result" class="result"></div>
                
                <button id="decrease-query-btn">使用一次諮詢</button>
                <div id="decrease-result" class="result"></div>
                
                <div class="form-group">
                    <label for="increase-amount">增加次數</label>
                    <input type="number" id="increase-amount" placeholder="增加的次數" min="1" value="1">
                </div>
                <div class="form-group">
                    <label for="target-user-id">目標用戶ID</label>
                    <input type="text" id="target-user-id" placeholder="用戶ID">
                </div>
                <button id="increase-queries-btn">增加諮詢次數 (僅管理員)</button>
                <div id="increase-result" class="result"></div>
            </div>
        </div>
    </div>

    <div id="test" class="tab-content">
        <h2>權限與中間件測試</h2>
        <p>測試各種權限中間件功能，查看不同角色用戶的權限限制</p>
        
        <div class="container">
            <div class="card">
                <h3>基本認證測試</h3>
                <button id="test-public-btn">公共路由</button>
                <button id="test-auth-btn">認證路由</button>
                <div id="test-basic-result" class="result"></div>
            </div>
            
            <div class="card">
                <h3>角色測試</h3>
                <button id="test-admin-btn">管理員路由</button>
                <button id="test-hr-btn">HR路由</button>
                <button id="test-employer-btn">雇主路由</button>
                <button id="test-employee-btn">員工路由</button>
                <div id="test-role-result" class="result"></div>
            </div>
        </div>
        
        <div class="container">
            <div class="card">
                <h3>多角色與諮詢次數測試</h3>
                <button id="test-admin-hr-btn">管理員或HR路由</button>
                <button id="test-check-queries-btn">檢查諮詢次數</button>
                <div id="test-special-result" class="result"></div>
            </div>
            
            <div class="card">
                <h3>資源訪問測試</h3>
                <div class="form-group">
                    <label for="test-user-id">用戶ID</label>
                    <input type="text" id="test-user-id" placeholder="要訪問的用戶ID">
                </div>
                <button id="test-user-profile-btn">訪問用戶資料</button>
                <div id="test-resource-result" class="result"></div>
            </div>
        </div>
        
        <div class="container">
            <div class="card">
                <h3>令牌信息</h3>
                <button id="test-token-info-btn">查看令牌信息</button>
                <div id="test-token-info-result" class="result"></div>
            </div>
        </div>
    </div>

    <div id="admin" class="tab-content">
        <h2>管理員 API 測試</h2>
        <p>注意：這些功能僅適用於管理員用戶</p>
        
        <div class="container">
            <div class="card">
                <h3>用戶管理</h3>
                <div class="form-group">
                    <label>搜索用戶</label>
                    <input type="text" id="admin-search-user" placeholder="用戶名或電子郵箱">
                </div>
                <div class="form-group">
                    <label>用戶類型</label>
                    <select id="admin-filter-userType">
                        <option value="all">全部</option>
                        <option value="admin">管理員</option>
                        <option value="hr">人資</option>
                        <option value="employer">雇主</option>
                        <option value="employee">員工</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>用戶狀態</label>
                    <select id="admin-filter-status">
                        <option value="all">全部</option>
                        <option value="active">啟用</option>
                        <option value="pending">待驗證</option>
                        <option value="disabled">禁用</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>註冊時間範圍</label>
                    <select id="admin-filter-dateRange">
                        <option value="all">全部</option>
                        <option value="today">今天</option>
                        <option value="week">本週</option>
                        <option value="month">本月</option>
                        <option value="year">本年</option>
                    </select>
                </div>
                <button id="admin-get-users-btn">獲取用戶列表</button>
                <button id="admin-export-users-btn">導出用戶數據</button>
                <div id="admin-users-result" class="result"></div>
            </div>
            
            <div class="card">
                <h3>新增用戶</h3>
                <div class="form-group">
                    <label for="admin-add-name">姓名</label>
                    <input type="text" id="admin-add-name" placeholder="用戶名稱">
                </div>
                <div class="form-group">
                    <label for="admin-add-email">電子郵箱</label>
                    <input type="email" id="admin-add-email" placeholder="電子郵箱">
                </div>
                <div class="form-group">
                    <label for="admin-add-password">初始密碼</label>
                    <input type="password" id="admin-add-password" placeholder="密碼">
                </div>
                <div class="form-group">
                    <label for="admin-add-userType">用戶類型</label>
                    <select id="admin-add-userType">
                        <option value="employee">員工</option>
                        <option value="employer">雇主</option>
                        <option value="hr">人資</option>
                        <option value="admin">管理員</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="admin-add-phone">手機號碼</label>
                    <input type="text" id="admin-add-phone" placeholder="手機號碼">
                </div>
                <div class="form-group">
                    <label for="admin-add-company">公司名稱</label>
                    <input type="text" id="admin-add-company" placeholder="公司名稱">
                </div>
                <div class="form-group">
                    <label for="admin-add-industry">行業</label>
                    <input type="text" id="admin-add-industry" placeholder="行業">
                </div>
                <div class="form-group">
                    <label for="admin-add-occupation">職業</label>
                    <input type="text" id="admin-add-occupation" placeholder="職業">
                </div>
                <div class="form-group">
                    <label for="admin-add-queries">初始諮詢次數</label>
                    <input type="number" id="admin-add-queries" placeholder="諮詢次數" value="5">
                </div>
                <button id="admin-create-user-btn">創建用戶</button>
                <div id="admin-create-result" class="result"></div>
            </div>
            
            <div class="card">
                <h3>用戶詳情</h3>
                <div class="form-group">
                    <label for="admin-view-userId">用戶ID</label>
                    <input type="text" id="admin-view-userId" placeholder="用戶ID">
                </div>
                <button id="admin-get-user-btn">獲取用戶詳情</button>
                <div id="admin-user-detail-result" class="result"></div>
            </div>
        </div>
    </div>

    <div id="debug" class="tab-content">
        <div class="container">
            <div class="card">
                <h2>API 端點</h2>
                <div class="form-group">
                    <label for="api-url">API 基礎 URL</label>
                    <input type="text" id="api-url" value="http://localhost:7070/api/v1" placeholder="API 基礎 URL">
                </div>
                <button id="save-api-url-btn">保存</button>
            </div>

            <div class="card">
                <h2>JWT 令牌</h2>
                <div class="form-group">
                    <label for="auth-token">認證令牌</label>
                    <textarea id="auth-token" rows="5" placeholder="登入後自動填入"></textarea>
                </div>
                <button id="save-token-btn">保存</button>
                <button id="clear-token-btn">清除</button>
            </div>
        </div>
    </div>

    <script>
        // API基礎URL
        const API_BASE_URL = '/api/v1';
        
        // 存儲token
        let authToken = localStorage.getItem('authToken') || '';
        let refreshToken = localStorage.getItem('refreshToken') || '';
        let currentUser = JSON.parse(localStorage.getItem('currentUser') || 'null');
        
        // 默認測試賬號
        const TEST_ADMIN = {
            email: 'superadmin@ailaborlaw.com',
            password: 'SuperAdmin@2025'
        };
        
        const TEST_USER = {
            email: 'newadmin@ailaborlaw.com',
            password: 'Admin1234'
        };
        
        // 切换标签页
        document.querySelectorAll('.tab-btn').forEach(button => {
            button.addEventListener('click', function() {
                // 移除所有active类
                document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
                
                // 添加active类到当前按钮和对应内容
                this.classList.add('active');
                const tabId = this.getAttribute('data-tab');
                document.getElementById(tabId).classList.add('active');
            });
        });
        
        // 通用API调用函数
        async function callApi(endpoint, method = 'GET', data = null, auth = false) {
            try {
                const url = `${API_BASE_URL}${endpoint}`;
                const headers = {
                    'Content-Type': 'application/json'
                };
                
                if (auth && authToken) {
                    headers['Authorization'] = `Bearer ${authToken}`;
                }
                
                const options = {
                    method,
                    headers
                };
                
                if (data && (method === 'POST' || method === 'PUT' || method === 'PATCH')) {
                    options.body = JSON.stringify(data);
                }
                
                const response = await fetch(url, options);
                const result = await response.json();
                
                return result;
            } catch (error) {
                console.error('API调用错误:', error);
                return {
                    success: false,
                    message: '请求失败',
                    error: {
                        code: 'REQUEST_FAILED',
                        details: error.message
                    }
                };
            }
        }
        
        // 格式化输出结果
        function formatResult(element, data, isSuccess = true) {
            if (!element) return;
            
            element.innerHTML = '';
            element.className = `result ${isSuccess ? 'success' : 'error'}`;
            
            if (typeof data === 'object') {
                const pre = document.createElement('pre');
                pre.textContent = JSON.stringify(data, null, 2);
                element.appendChild(pre);
            } else {
                element.textContent = data;
            }
        }
        
        // 更新UI以反映登录状态
        function updateLoginStatus() {
            const userInfo = document.getElementById('user-info');
            
            if (!userInfo) return;
            
            if (authToken && currentUser) {
                userInfo.innerHTML = `
                    <div class="logged-in">
                        <p><strong>已登录为:</strong> ${currentUser.name || 'Unknown'}</p>
                        <p><strong>用户类型:</strong> ${currentUser.userType || 'Unknown'}</p>
                        <button id="logout-btn">登出</button>
                    </div>
                `;
                
                document.getElementById('logout-btn').addEventListener('click', handleLogout);
            } else {
                userInfo.innerHTML = '<p>未登录</p>';
            }
        }
        
        // 处理登出
        function handleLogout() {
            localStorage.removeItem('authToken');
            localStorage.removeItem('refreshToken');
            localStorage.removeItem('currentUser');
            authToken = '';
            refreshToken = '';
            currentUser = null;
            updateLoginStatus();
            alert('成功登出');
        }
        
        // 初始化页面
        document.addEventListener('DOMContentLoaded', function() {
            // 注册处理程序
            document.getElementById('register-btn').addEventListener('click', handleRegister);
            document.getElementById('login-btn').addEventListener('click', handleLogin);
            document.getElementById('get-profile-btn').addEventListener('click', handleGetProfile);
            document.getElementById('update-profile-btn').addEventListener('click', handleUpdateProfile);
            document.getElementById('get-queries-btn').addEventListener('click', handleGetQueries);
            document.getElementById('decrease-query-btn').addEventListener('click', handleDecreaseQuery);
            document.getElementById('increase-queries-btn').addEventListener('click', handleIncreaseQueries);
            
            // 管理员API测试处理程序
            document.getElementById('admin-get-users-btn').addEventListener('click', handleGetUsers);
            document.getElementById('admin-export-users-btn').addEventListener('click', handleExportUsers);
            document.getElementById('admin-create-user-btn').addEventListener('click', handleCreateUser);
            document.getElementById('admin-get-user-btn').addEventListener('click', handleGetUserDetail);
            
            // 快速登入按鈕
            document.getElementById('admin-quick-login').addEventListener('click', () => handleQuickLogin(TEST_ADMIN));
            document.getElementById('user-quick-login').addEventListener('click', () => handleQuickLogin(TEST_USER));
            
            updateLoginStatus();
        });
        
        // 注册处理函数
        async function handleRegister() {
            const name = document.getElementById('register-name').value;
            const email = document.getElementById('register-email').value;
            const password = document.getElementById('register-password').value;
            const userType = document.getElementById('register-userType').value;
            const industry = document.getElementById('register-industry').value;
            const position = document.getElementById('register-position').value;
            const inviteCode = document.getElementById('register-inviteCode').value;
            
            if (!name || !email || !password) {
                formatResult(document.getElementById('register-result'), '请填写必要信息', false);
                return;
            }
            
            const data = {
                name,
                email,
                password,
                userType,
                profile: {}
            };
            
            if (industry) data.profile.industry = industry;
            if (position) data.profile.position = position;
            if (inviteCode) data.inviteCode = inviteCode;
            
            const result = await callApi('/auth/register', 'POST', data);
            formatResult(document.getElementById('register-result'), result, result.success);
            
            if (result.success && result.data?.token) {
                authToken = result.data.token;
                currentUser = result.data.user;
                localStorage.setItem('authToken', authToken);
                localStorage.setItem('currentUser', JSON.stringify(currentUser));
                updateLoginStatus();
                
                // 自动切换到用户信息页面
                document.querySelector('[data-tab="user"]').click();
            }
        }
        
        // 登录处理函数
        async function handleLogin() {
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            
            if (!email || !password) {
                formatResult(document.getElementById('login-result'), '请填写邮箱和密码', false);
                return;
            }
            
            const result = await callApi('/auth/login', 'POST', { email, password });
            formatResult(document.getElementById('login-result'), result, result.success);
            
            if (result.success && result.data?.token) {
                authToken = result.data.token;
                refreshToken = result.data.refreshToken || '';
                currentUser = result.data.user;
                localStorage.setItem('authToken', authToken);
                localStorage.setItem('refreshToken', refreshToken);
                localStorage.setItem('currentUser', JSON.stringify(currentUser));
                updateLoginStatus();
                
                // 自动切换到用户信息页面
                document.querySelector('[data-tab="user"]').click();
            }
        }
        
        // 获取个人资料
        async function handleGetProfile() {
            if (!authToken) {
                formatResult(document.getElementById('profile-result'), '请先登录', false);
                return;
            }
            
            const result = await callApi('/users/me', 'GET', null, true);
            formatResult(document.getElementById('profile-result'), result, result.success);
            
            if (result.success) {
                document.getElementById('update-name').value = result.data.user.name || '';
                document.getElementById('update-phone').value = result.data.user.phone || '';
                document.getElementById('update-company').value = result.data.user.company || '';
                document.getElementById('update-industry').value = result.data.user.industry || '';
                document.getElementById('update-position').value = result.data.user.position || '';
            }
        }
        
        // 更新个人资料
        async function handleUpdateProfile() {
            if (!authToken) {
                formatResult(document.getElementById('update-profile-result'), '请先登录', false);
                return;
            }
            
            const name = document.getElementById('update-name').value;
            const phone = document.getElementById('update-phone').value;
            const company = document.getElementById('update-company').value;
            const industry = document.getElementById('update-industry').value;
            const position = document.getElementById('update-position').value;
            
            if (!name) {
                formatResult(document.getElementById('update-profile-result'), '名称不能为空', false);
                return;
            }
            
            const result = await callApi('/users/me', 'PUT', {
                name,
                phone,
                company,
                industry,
                position
            }, true);
            formatResult(document.getElementById('update-profile-result'), result, result.success);
        }
        
        // 获取咨询次数
        async function handleGetQueries() {
            if (!authToken) {
                formatResult(document.getElementById('queries-result'), '请先登录', false);
                return;
            }
            
            const result = await callApi('/users/me', 'GET', null, true);
            
            if (result.success) {
                const queryInfo = {
                    remainingQueries: result.data.user.remainingQueries,
                    totalConsultations: result.data.user.totalConsultations
                };
                formatResult(document.getElementById('queries-result'), queryInfo, true);
            } else {
                formatResult(document.getElementById('queries-result'), result, false);
            }
        }
        
        // 使用一次咨询
        async function handleDecreaseQuery() {
            if (!authToken) {
                formatResult(document.getElementById('decrease-result'), '请先登录', false);
                return;
            }
            
            const result = await callApi('/users/me/queries/decrease', 'POST', null, true);
            formatResult(document.getElementById('decrease-result'), result, result.success);
        }
        
        // 增加咨询次数 (管理员功能)
        async function handleIncreaseQueries() {
            if (!authToken) {
                formatResult(document.getElementById('increase-result'), '请先登录', false);
                return;
            }
            
            const userId = document.getElementById('target-user-id').value;
            const amount = parseInt(document.getElementById('increase-amount').value) || 1;
            
            if (!userId) {
                formatResult(document.getElementById('increase-result'), '请输入目标用户ID', false);
                return;
            }
            
            const result = await callApi(`/admin/users/${userId}/queries/increase`, 'POST', { amount }, true);
            formatResult(document.getElementById('increase-result'), result, result.success);
        }
        
        // 获取用户列表
        async function handleGetUsers() {
            if (!authToken) {
                formatResult(document.getElementById('admin-users-result'), '请先登录', false);
                return;
            }
            
            const search = document.getElementById('admin-search-user').value;
            const userType = document.getElementById('admin-filter-userType').value;
            const status = document.getElementById('admin-filter-status').value;
            const dateRange = document.getElementById('admin-filter-dateRange').value;
            
            let queryParams = '?';
            if (search) queryParams += `search=${encodeURIComponent(search)}&`;
            if (userType && userType !== 'all') queryParams += `userType=${userType}&`;
            if (status && status !== 'all') queryParams += `status=${status}&`;
            if (dateRange && dateRange !== 'all') queryParams += `dateRange=${dateRange}&`;
            
            const result = await callApi(`/admin/users${queryParams}`, 'GET', null, true);
            formatResult(document.getElementById('admin-users-result'), result, result.success);
        }
        
        // 导出用户数据
        async function handleExportUsers() {
            if (!authToken) {
                formatResult(document.getElementById('admin-users-result'), '请先登录', false);
                return;
            }
            
            const search = document.getElementById('admin-search-user').value;
            const userType = document.getElementById('admin-filter-userType').value;
            const status = document.getElementById('admin-filter-status').value;
            const dateRange = document.getElementById('admin-filter-dateRange').value;
            
            let queryParams = '?';
            if (search) queryParams += `search=${encodeURIComponent(search)}&`;
            if (userType && userType !== 'all') queryParams += `userType=${userType}&`;
            if (status && status !== 'all') queryParams += `status=${status}&`;
            if (dateRange && dateRange !== 'all') queryParams += `dateRange=${dateRange}&`;
            
            // 下载CSV文件
            window.open(`${API_BASE_URL}/admin/users/export${queryParams}`, '_blank');
        }
        
        // 创建用户
        async function handleCreateUser() {
            if (!authToken) {
                formatResult(document.getElementById('admin-create-result'), '请先登录', false);
                return;
            }
            
            const name = document.getElementById('admin-add-name').value;
            const email = document.getElementById('admin-add-email').value;
            const password = document.getElementById('admin-add-password').value;
            const userType = document.getElementById('admin-add-userType').value;
            const phone = document.getElementById('admin-add-phone').value;
            const company = document.getElementById('admin-add-company').value;
            const industry = document.getElementById('admin-add-industry').value;
            const occupation = document.getElementById('admin-add-occupation').value;
            const queries = parseInt(document.getElementById('admin-add-queries').value) || 5;
            
            if (!name || !email || !password) {
                formatResult(document.getElementById('admin-create-result'), '请填写必要信息', false);
                return;
            }
            
            const result = await callApi('/admin/users', 'POST', {
                name,
                email,
                password,
                userType,
                phone,
                company,
                industry,
                occupation,
                queries
            }, true);
            formatResult(document.getElementById('admin-create-result'), result, result.success);
        }
        
        // 获取用户详情
        async function handleGetUserDetail() {
            if (!authToken) {
                formatResult(document.getElementById('admin-user-detail-result'), '请先登录', false);
                return;
            }
            
            const userId = document.getElementById('admin-view-userId').value;
            if (!userId) {
                formatResult(document.getElementById('admin-user-detail-result'), '请输入用户ID', false);
                return;
            }
            
            const result = await callApi(`